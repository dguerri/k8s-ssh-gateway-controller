# Namespace for the Pico Gateway API controller and its resources
apiVersion: v1
kind: Namespace
metadata:
  name: pico-sh-system

---
# Secret containing the SSH private key required by the Pico Gateway API controller
apiVersion: v1
kind: Secret
metadata:
  name: pico-sh-ssh-key
  namespace: pico-sh-system
type: Opaque
data:
  id: <base64-encoded-content-of-your-pico.sh-ssh-key>

---
# ServiceAccount used by the Pico Gateway API controller to interact with the Kubernetes API
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pico-sh-gateway-api-controller-sa
  namespace: pico-sh-system

---
# ClusterRole granting read and patch permissions on HTTPRoute and TCPRoute resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pico-sh-gateway-api-controller-cr
rules:
- apiGroups: ["gateway.networking.k8s.io"]
  resources: ["gateways"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["gateway.networking.k8s.io"]
  resources: ["tcproutes"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["gateway.networking.k8s.io"]
  resources: ["httproutes"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["gateway.networking.k8s.io"]
  resources: ["gatewayclasses"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["gateway.networking.k8s.io"]
  resources: ["gateways/status"]
  verbs: ["update", "patch"]
- apiGroups: ["gateway.networking.k8s.io"]
  resources: ["gatewayclasses/status"]
  verbs: ["update", "patch"]

---
# Binds the ClusterRole to the ServiceAccount in the pico-sh-system namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pico-sh-gateway-api-controller-crb
subjects:
- kind: ServiceAccount
  name: pico-sh-gateway-api-controller-sa
  namespace: pico-sh-system
roleRef:
  kind: ClusterRole
  name: pico-sh-gateway-api-controller-cr
  apiGroup: rbac.authorization.k8s.io

---
# GatewayClass defining the controller responsible for managing Gateway resources
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: pico-sh-gateway-cl
spec:
  controllerName: tunnels.pico.sh/gateway-api-gateway-controller

---
# Deployment of the Pico Gateway API controller
# Includes environment variables, resource limits, and SSH key mounting
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pico-sh-gateway-api-controller
  namespace: pico-sh-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pico-sh-gateway-api-controller
  template:
    metadata:
      labels:
        app: pico-sh-gateway-api-controller
    spec:
      securityContext:
        runAsUser: 65532    # nonroot
        runAsGroup: 65532   # nonroot
        fsGroup: 65532      # nonroot
      serviceAccountName: pico-sh-gateway-api-controller-sa
      containers:
      - name: controller
        image: docker-lab.guerri.me:5001/pico-sh-gateway-api-controller:latest
        volumeMounts:
        - name: ssh-key
          mountPath: /ssh
          readOnly: true
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      volumes:
      - name: ssh-key
        secret:
          secretName: pico-sh-ssh-key
          defaultMode: 256 # 0400 octal 
